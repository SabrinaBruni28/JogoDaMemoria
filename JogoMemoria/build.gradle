buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://s01.oss.sonatype.org' }
        gradlePluginPortal()
        mavenLocal()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        // Adicione aqui dependências de plugins, se necessário
        classpath 'com.android.tools.build:gradle:7.2.1' // Exemplo
    }
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    // Configurações para IDEs
    idea {
        module {
            outputDir file('build/classes/java/main')
            testOutputDir file('build/classes/java/test')
        }
    }
}

subprojects {
    version = '$projectVersion'
    ext.appName = 'MemoriaGame'
    repositories {
        mavenCentral()
        maven { url 'https://s01.oss.sonatype.org' }
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'java-library'
    sourceCompatibility = 11

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'mysql:mysql-connector-java:8.0.33' // Adicione esta linha
    }

    // Outras configurações
    tasks.register('generateAssetList') {
        inputs.dir("${project.rootDir}/assets/")
        File assetsFolder = new File("${project.rootDir}/assets/")
        File assetsFile = new File(assetsFolder, "assets.txt")
        assetsFile.delete()

        fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
            assetsFile.append(it + "\n")
        }
    }
    processResources.dependsOn 'generateAssetList'

    compileJava {
        options.incremental = true
    }
}

eclipse.project.name = 'MemoriaGame' + '-parent'
